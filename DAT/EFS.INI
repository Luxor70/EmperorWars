[Options]
video_on=1        ; enable starting videos
grid=1            ; show the grid on the hex map
production=1      ; show city production on the hex map
sound=1           ; enable sound: turns ON (1) / OFF (0) all sounds
music=0           ; enable music: turns ON (1) / OFF (0)
; Note that the next 2 parameters control auto-saving: 1(autosave) controls saving of the game at the end of your turn and 2(SaveTurnsInLog) controls saving at the start of the next turn (after all players have played their turn)
autosave=1        ; enable / disable autosave of the game after you end your turn of the form House 3-letter abbreviation XYZMMDDa.SAV / XYZMMDDb.SAV:
; Where: XYZ = LIH for Li Halan, HAZ for Hazat, DEC for Decados, HAW for Hawkwood, & ALM for Al-Malik; MM - 2-digit month of play, DD - 2-digit day of play
;        a = current year's turn, b = previous year's turn
; Set to 0 to turn off
; Note: Independent of SaveTurnsInLog below
SaveTurnsInLog=0  ; enable / disable and set the number of turns between "Log Auto Saves" - games saved at the start of the year (after all players have completed the current year's turn) of the specified interval:
; LOG_SAVE_yyyy.SAV where yyyy is the 4-digit game year, for example 4970
; Set to 0 to turn off, 1 = save every year (4957, 4958, 4959, ...), 2 = save every other year (4958, 4960, ...), 3 = save every third year (4959, 4962, ...), etc.
; Note: Independent of autosave above
fx_volume=100     ; set this from 0 to 100 to change the sound effect volume
music_volume=100  ; set this from 0 to 100 to change the music volume
consume_food=1    ; Start Screen: can be used to enable / disable food consumption for all units
plague=1          ; Start Screen: can be used to enable / disable whether plague is in the game
rebellions=1      ; Start Screen: can be used to enable / disable whether rebellions can occur
combat_report=1   ; Start Screen: can be used to enable / disable whether to show combat reports
show_tutorials=0  ; Start Screen: can be used to enable / disable whether to show tutorials on game startup
warehouse=0       ; Start Screen: can be used to enable / disable whether univeral warehouse is on or off
fullscreen=1      ; Play the game in fullscreen (1) or window (0)
smooth_scaling=1  ; Use linear (1) or nearest-neighbor (0) scaling in fullscreen mode
integer_scaling=0 ; Force integer scaling in fullscreen mode
resources_hover=1 ; Show resource overlay on mouse hover	
open_new_city=1   ; Automatically open the city dialog when building a new city																				 

[Computer]
Player 1=1  ; set to 1 to default to a computer player at the player selection menu
Player 2=1  ; set to 1 to default to a computer player at the player selection menu
Player 3=1  ; set to 1 to default to a computer player at the player selection menu
Player 4=1  ; set to 1 to default to a computer player at the player selection menu
Player 5=1  ; set to 1 to default to a computer player at the player selection menu
hideai=0    ; set this to 1 to hide the AI movements
; Note for like that each player is 100 with themselves, Symbiots and Rebels hate everyone (0) (and everyone else hates them),
; and all Ministries are 100 with each other; otherwise, like is computed as follows:
; these parameters are used to compute a random like value for the computer player at the start of the game
; That is between (inclusive) the min and max values specified below
playerinfo_like_min = 45      ; this is the min like for computer players
playerinfo_like_max = 55      ; this is the max like for computer players
; For example, if playerinfo_like_min = 25 and playerinfo_like_max = 60 the player like will be between 25 to 60 at the start of the game
; for each player that this applies to (see above about the same player, Symbiots, Rebels, and Ministries)
activate_vau_tech=10         ; if this technology is researched, then the Vau are activated regardless of whether they were attacked (10 = Necrosis, -1 disables this feature)

[Defaults]
start_year=4964               ; the starting year of the game
turns_til_vote=10             ; number of turns before voting occurs
;This next parameter is used to change the vote counting system:
;  A setting of 1 enables a new style of vote counting where the vote count is conducted at the end of the voting year (after the Rebels have taken their turn)
;  With a setting of 1, votes only get counted once and so it places importance on maintaining Sceptor ownership throughout the entire voting year
;  A setting of 0 enables the old style (V1.4) of vote countineg where the vote count is conducted at the end of the player's turn during that voting year.
;  With the setting of 0, it is possible that votes can be double counted if Sceptors that have already voted get captured by another player during their turn
count_votes_at_year_end=1     ; Setting this to 1 enables the new voting system (see the above comment), while 0 enables the V1.4 voting system
turns_til_new_patriarch=13    ; NEW for sects, this is the number of turns that pass before a new patriarch is selected
default_leadership=100        ; loyalty roll for routing: ( _default_leadership - Unit's Loyalty ), set this value lower to reduce chance of routing based on the unit's loyalty
default_damage=100            ; damage roll for routing: ( _default_damage * Total Damage / Unit Health ), set this value lower to reduce chance of routing based on the unit's damage
starting_credits=5000         ; player's starting credits
default_tax_rate=25           ; player's starting tax rate
default_tithe_rate=10         ; player's tithe skim / city
default_tithe_setting=0       ; player's starting tithe setting
default_unit_pay_rate=75      ; player's starting unit pay rate
default_ai_tax_rate=25        ; AI player's starting tax rate
default_ai_tithe_rate=10      ; AI player's tithe skim / city
default_ai_tithe_setting=0    ; AI player's starting tithe setting
default_ai_unit_pay_rate=75   ; AI player's starting unit pay rate
; This next parameter deals with the reduction in the maximum loyalty of cities and units due to the tithe setting (MLRF = Maximum Loyalty Reduction Factor)
; If the player's tithe setting is max and the parameter below is 20, then it results in a 20% (100-100*20/100) reduction in the maximum
; loyalty of your cities and units. This is a cap on their loyalty.
tithe_MLRF=20                 ; percent of the player's titheSkimPer that reduces the maximum loyalty for cities and units
give_back_res_per=50          ; when canceling a build order, this is the percentage of the resources returned
default_interest_rate=10      ; interest rate of loans from the league
default_ai_interest_rate=5    ; AI interest rate of loans from the league
default_loan_turns=10         ; how many years before the loan is repayed in full
default_ai_loan_turns=15      ; AI how many years before the loan is repayed in full
percent_asset_is_loan=50      ; percentage of player's total worth (1/3 the total of all cargo + structures)
minimum_loan_amount=1000      ; min amount of the loan
shield_radius=1               ; radius of shields generated by shield structures
third_republic_min=1000000     ; starting value of accumulated credits before there is a chance of the third republic
third_republic_max=2000000    ; maximum value of accumulated credits before there is a chance of the third republic
not_enuf_garrison=20          ; for structures other than Agora, Factory, Fort, and Starport the comparison value must be less than this to build units here
credits_received=2            ; how much will the AI's like increase if credits are given to player
per_tech_received=5           ; how much will the AI's like increase if tech is given to player
receive_unfound_city=1        ; how much will the AI's like increase if a map is given to player for each new city on it (or, for the Church, the number of Labs)
promise_votes=5               ; how much will the AI's like increase if votes are given to the player
auto_save_random_gal=0        ; setting to 1 enables automatic saving of randomly generated Galaxies at the start of the game so that they can be shared, edited, etc.
overwrite_gal_ini_file=0      ; setting this to 0 prevents overwriting of the GAL file's INI file on saving, 1 automatically overwrites the GAL INI file
; These next two deal with the loss of loyalty due to running a negative treasury
debt_loyaty_loss=1            ; this is the loyalty loss per every firebird increment below
debt_per_firebirds=100        ; this is the loyalty loss above per every firebird we are below 0
; If debt_loyaty_loss = 1 and debt_per_firebirds = 100, this means that if you are 1000 Firebirds in debt, you will lose 10 loyalty over the next few turns
assign_regency=1			  ; if 0, Imperial Guards are not assigned, if 1 it is assigned
regency_ministry=0			  ; if 1, Regent is assigned the Imperial Guard only. If 0, Regent is assigned the Imperial Guard and they can also assign themselves a Ministry position
loaned_city_upkeep=0          ; if 0, Ministry cities will not pay upkeep value
loaned_unit_upkeep=0          ; if 0, Ministry units will not pay upkeep value

[Movement]
new_combined_move=0             ; setting to 0 uses old movement algorithm for moving combined units (uses max of any unit in stack) and to 1 uses new movement algorithm for combined units (uses average of all units)
road_move_dominant=0            ; setting this ensures that the cost of roads is the only terrain type used when moving on roads; otherwise, previous behavior is observed
movepoints_reset_on_health=0    ; setting this to 1 factors the unit's health into consideration when resetting a unit's health points, 0 sets the movement rate for health = 100%
movepoints_min_reduction=100    ; this is the minimum reduction in movement rate (note that setting this to 100, effective sets movepoints_reset_on_health to 0 above, and this value is clipped between 0 and 100)

[Combat]
rank_max = 9                    ; the upper limit of how many ranks the game registers. Max you can set is 999
rank_assassination = 6          ; the starting target rank for units that can assassinate in the close phase. Must be lower than rankMax
; These next items deal with the combat mechanic formula: ( (HIT_ROLL + (ACCURACY - AGILITY) ) > TO_HIT ) ? Hit : Miss
to_hit = 10                     ; the difference in the above formula must be greater than this value to score a hit in combat
hit_roll = 20                   ; this is the random roll that is added to the above formula when determining a hit
; These next items deal with structure damage and allow MODding of the damage algorithm to work with the MODder's changes to DAMAGE.DAT
struct_attack_divisor = 10      ; this is a divisor used to limit attacker's weapon attack strength to structures if the values specified in DAMAGE.DAT are insufficient
struct_damage_divisor = 10      ; this is a divisor used to limit the damage to structures if the values specified in the actual DAMAGE.DAT ratio columns are insufficient
struct_max_damage = 100         ; this is a limiter that can be used to limit the maximum damage to structures if the values specified in DAMAGE.DAT are insufficient

[Landing]
rand_land_damage_min = 10       ; When landing either a space or jump unit, the damage is a random roll from min (this number) to max below
rand_land_damage_max = 50       ; When landing either a space or jump unit, the damage is a random roll from min (the number above) to max (this number)
rand_land_damage_min_ai = 1     ; same as above, but for the AI
rand_land_damage_max_ai = 5     ; same as above, but for the AI

[Camo]
; These two parameters deal with the randomization of a unit's camouflage value a random value between the min and max is added to the unit's camouflage rating
rand_camo_min = -2              ; For camouflage, this is the minimum offset
rand_camo_max = 2               ; same as above, but maximum offset

[Difficulty]
beginner=50                     ; scale factor divided by 100 for the difficulty level of the player
easy=75                         ; scale factor divided by 100 for the difficulty level of the player
average=100                     ; scale factor divided by 100 for the difficulty level of the player
difficult=150                   ; scale factor divided by 100 for the difficulty level of the player
ridiculous=200                  ; scale factor divided by 100 for the difficulty level of the player

[Bonuses]
loyalty_bonus_cumulative=1      ; determines whether noble and officer loyalty bonuses stack
loyalty_noble_bonus=30          ; add this to unit routing rolls if this unit is in stack
loyalty_officer_bonus=20        ; add this to unit routing rolls if this unit is in stack
accuracy_bonus_cumulative=1     ; determines whether noble and officer accuracy bonuses stack
accuracy_noble_bonus=2          ; nobles add this accuracy to units in their stack
accuracy_officer_bonus=1        ; officers add this accuracy to units in their stack
agility_bonus_cumulative=1      ; determines whether noble and officer agility bonuses stack
agility_noble_bonus=2           ; nobles add this agility to units in their stack
agility_officer_bonus=1         ; officers add this agility to units in their stack
agility_hidden_bonus=3          ; the agility bonus for a hidden unit
agility_frozen_tech=2           ; the agility bonus for Frozen Environment Tech
agility_jungle_tech=2           ; the agility bonus for Jungle Environment Tech
agility_barren_tech=2           ; the agility bonus for Barren Environment Tech

[Rebellion]
city_rebellion_loyaty=25        ; if city loyalty drops to this value, then there is a chance of the city rebelling (note that it also must fail a separate loyalty check)
unit_rebellion_loyaty=25        ; if unit loyalty drops to this value, then there is a chance of the unit rebelling (note that it also must fail a separate loyalty check)
tithe_rebellion_factor=1        ; for each increment of the tithe setting, this is the chance of rebellion for units and cities (note that they must also fail their loyalty check)

[Healing]
min_health_loss_for_famine=5    ; how much does health city or unit lose due to famine - minimum
max_health_loss_for_famine=10   ; how much does health city or unit lose due to famine - maximum
city_heal_rate=8                ; amount of health a city recovers each turn (bonuses can add to this)
unit_heal_in_city=12            ; base amount of health a unit recovers in cities (bonuses can add to this)
unit_heal=2                     ; base amount of health a unit recovers outside cities (bonuses can add to this)
orbit_unit_heal=2               ; base amount of health a unit recovers in orbit (bonuses can add to this)
medic_heal_rate=4               ; units designated as "medics" (see UNIT.DAT) heal units at this rate (bonuses can add to this)

[Plague]
health_check_for_plague=10      ; units & cities need to be below this health value and starving before they are checked for Plague
immune_plague_bonus=25          ; add this to plague rolls if player has researched Cure for Necrosis
hospital_assymptotic_scalar=10  ; this factor determines how rapidly multiple hospitals approach the ceiling below (higher numbers require fewer hospitals)
plague_hospital_ceiling=100     ; this is the maximum resistance that Hospitals can provide to the plague
min_health_loss_for_plague=10   ; this is the minimum amount of health lost due to a unit having the Plague
max_health_loss_for_plague=50   ; this is the maximum amount of health lost due to a unit having the Plague
plague_infection_radius=4       ; this is the infection radius of the Plague

[League]
league_int_rate_up=5             ; how much does the loan interest rate increase if the player does not pay this turn
; This next value is similar to the tithe_MLRF, but it is a percent multiplier to taxPer to determine the amount the league like changes based on the tax setting
; For example, if the tax setting is 25 and the value below is 20, then the like up / down will be 25 * 20 / 100 = 5
tax_setting_dislike_factor=20    ; how much does the league like change based on the tax setting
; The markup is as follows: Sell = ( Buy * ( 100 + res_price_markup_gain ) + res_price_markup_offset ) / 100, rounded down
res_price_markup_gain=30         ; how much does the league markup the starting resource prices from the values in RES.DAT: gain
res_price_markup_offset=90       ; how much does the league markup the starting resource prices from the values in RES.DAT: offset
; With the values above, here are some examples:
;  Sell = ( 10 * 130 + 90 ) / 100 = 1390 / 100 = 13
;  Sell = ( 20 * 130 + 90 ) / 100 = 2690 / 100 = 26
;  Sell = ( 35 * 130 + 90 ) / 100 = 4640 / 100 = 46
;  Sell = ( 130 * 130 + 90 ) / 100 = 16990 / 100 = 169
res_overstock_markdown=20        ; how low is the league allowed to drop prices for an overstocked item (this is subtract from 100)
res_understock_markup=20         ; how high is the league allowed to increase prices for an understocked item (this is added to 100)
; Note that the above two factors can effect the game's starting prices.
max_freighters_for_resupply=40   ; how many freighters League AI will try to have for agora resupply
num_league_escorts=80            ; how many escort ships League AI will try to have for agora resupply

[Church]
excommunicate_turns=10           ; number of turns until the excommunication expires
excommunicate_like=10            ; if the church like of player is less than or equal to this value then they are excommunicated
excom_peasant_loyalty_hit=30     ; city loyalty is reduced by this amount if the player is excommunicated
sign_holy_writ=50                ; how much does the church like increase if the player signs the holy writ
; This next value is similar to the tithe_MLRF in that it is a percent multiplier to titheSkimPer to determine the amount the church like changes based on the tithe setting
; For example, if the tithe setting is 25 and the value below is 20, then the like up / down will be 25 * 20 / 100 = 5
tithe_setting_dislike_factor=20  ; how much does the church like change based on the tithe setting
num_inquisitors_to_build=20      ; how many inquisitors the Church AI will try to have
num_assault_landers=10           ; how many assault landers the Church AI will try to have
num_church_escorts=20            ; how many escort ships Church AI will try to have
max_cathedral_ships=40           ; how many ships should the Church AI have to send to planets with Cathedrals

[CombatDrugs]
combat_drug_health_loss_max=10   ; units designated as using performance-enhancing drugs can lose a random amount of health up to this value after combat, setting to 0 disables this feature
combat_drug_loyalty_loss_max=10  ; units designated as using performance-enhancing drugs can lose a random amount of loyalty up to this value after combat, setting to 0 disables this feature
combat_drug_exp_loss_chance=2    ; units designated as using performance-enhancing drugs can suffer memory loss, permanently losing experience based on this chance (they can always gain the experience back in combat) - set to 0 to disable

[Tech]
like_level_min=1                         ; the minimum like level that a technology in TECH.DAT can have
like_level_proscribe=8                   ; the like level that a technology in TECH.DAT will automatically be proscribed
like_level_max=20                        ; the maximum like level that a technology in TECH.DAT can have
like_level_decay=20                      ; the chance out of 1 (20 = 5% chance) that a technology in TECH.DAT can have its like value decay if it's greater than min & less than max
like_level_years=8                       ; if a technology hasn't been proscribed in this number of years, then like_level_proscribe can be incremented by 1 as long as it is less than max / 2 + 1
like_level_decay_by_like=1               ; if set to 1, the like levels when like_level_decay succeeds, requires an additional check based on the current like value of the tech greater than a random roll based on like_level_max
multi_tech_proscribe=1                   ; if set to 1, then there is a chance for multiple techs to be proscribed during the same year
proscribe_reset_interval=2               ; the number of times like_level_years must expire before a tech will be allowed to use the unproscribing logic for the possibility of being unproscribed (affected by difficulty level)
unproscribe_reset_interval=2             ; the same as above except for allowing recently unproscribed techs to start using the proscribing logic again (affected by difficulty level)
proscribe_diplo_min=50                   ; for Church Diplomacy the minimum amount of Firebirds that the Church will take in the value assessment equation required to proscribe a tech (see TECH.DAT for more info)
proscribe_diplo_max=100                  ; for Church Diplomacy the maximum amount of Firebirds that the Church will take in the value assessment equation required to proscribe a tech (see TECH.DAT for more info)
force_proscribe_diplo_min=100000         ; for Church Diplomacy when getting the Church to proscribe a recently unproscribed tech, this is the minimum amount required plus assitional Firebirds required for them to consider proscribing a tech that has been recently unproscribed (see TECH.DAT for more info)
force_proscribe_diplo_max=200000         ; for Church Diplomacy when getting the Church to proscribe a recently unproscribed tech, this is the maximum amount required plus assitional Firebirds required for them to consider proscribing a tech that has been recently unproscribed (see TECH.DAT for more info)
unproscribe_diplo_min=500                ; for Church Diplomacy the minimum amount of Firebirds that the Church will take in the value assessment equation required to unproscribe a tech (see TECH.DAT for more info)
unproscribe_diplo_max=1000               ; for Church Diplomacy the maximum amount of Firebirds that the Church will take in the value assessment equation required to unproscribe a tech (see TECH.DAT for more info)
force_unproscribe_diplo_min=100000       ; for Church Diplomacy when getting the Church to proscribe a recently unproscribed tech, this is the minimum amount required plus assitional Firebirds required for them to consider proscribing a tech that has been recently unproscribed (see TECH.DAT for more info)
force_unproscribe_diplo_max=200000       ; for Church Diplomacy when getting the Church to proscribe a recently unproscribed tech, this is the maximum amount required plus assitional Firebirds required for them to consider proscribing a tech that has been recently unproscribed (see TECH.DAT for more info)
; These are special techs that the game must be informed of
vau_psych_tech=121	    	             ; Vau Psychology
sym_psych_tech=122			             ; Symbiot Psychology
barren_tech=21			  	             ; Barren Environment
frozen_tech=22				             ; Frozen Environment
jungle_tech=23				             ; Jungle Environment
tech_res1=1					             ; Microbiology
tech_res2=45				             ; Physics
tech_res3=98				             ; Psycho-Sociology
tech_res4=145				             ; Applied Technology
theurgy_tech=105			             ; Theurgy
cure_tech=12		   		             ; Cure for Necrosis
freighter_tech=291 			             ; Freighters

[Clergy]
cathedral_change_sect=10                 ; +/- Bonus for Cathedrals of the same / different sect for unit conversion
clergy_change_sect=1                     ; +/- Bonus for Clergy of the same / different sect for unit conversion
clergy_tithe_skim=1                      ; +/- Bonus for the additional Tithe Skim collected for the same / different Clergy Sects on the planet

[Timers] ; all values are in ms
move_pause = 500                         ; in ms, pause before going to next group
pause_btw_move = 666                     ; delay between the moving of an AI player in space
time_autoscroll = 200                    ; how fast does the map scroll when moving a mouse to its edge
; These are the timers for the timed messages in the game in milliseconds - set to 0 to disable
time_shield_prevents = 2000              ; Shield prevents bombardment message timer
time_limited_engagement = 2000           ; Limited engagement timer
time_infinite_loop = 1000                ; Infinite loop in combat timer
time_captured_units = 1500               ; Captured units timer
time_ambush = 1000                       ; Ambush timer
time_attacker_hidden = 1500              ; Attacker hidden timer
time_defender_hidden = 1500              ; Defender hidden timer
time_attacker_rallied = 1500             ; Attacker's units have rallied timer
time_defender_rallied = 1500             ; Defender's units have rallied timer
time_click_on_hex = 500                  ; Click on a hex to land timer for landing from space
time_click_on_hex_to_attack = 500        ; Click on hex to attack timer for Ranged Space bombardment
time_air_unit_ran_out_of_fuel = 1500     ; Air unit ran out of fuel timer
time_destroyed_city = 1500               ; Destroyed city timer
time_captured_city = 1500                ; Captured city timer
; This next group of timers are for the combat damage display - set to lower values for faster combat ployout
time_delay_health = 100                  ; timer delay before starting the showing of health updates
time_show_health = 50                    ; timer between different combat damage health updates
time_show_attacker = 200                 ; timer between showing the attacker stack for multiple times
time_show_defender = 200                 ; timer between showing the defender stack for multiple times
time_start_attack = 200                  ; timer before conducting weapon phase combat
time_show_fireball = 200                 ; timer before showing the fireball damage
time_show_dead = 200                     ; timer before showing the skull & crossbones
time_show_struct_damage = 25             ; timer for showing structure damage

; This next section is for choosing a computation / algorithm for choosing units based on computed values in the game code
[ComputeOtherTableValues]
; computee_strengths_algorithm affects the generation of random units:
;   Create Random Galaxy and Map Editor Unit Randomization Functions use the computed garrisonStr and directly compare to the Power Values in RANDGAL.DAT
;   Attacking (Alien) Ruins - the randomly generated units use the totalStr and the Power Values in (ALIEN)RUIN.DAT
; unitTable refers to the unit's values in UNIT.DAT for a specific unit and note that if a unit has Unit Function of Non-Combat then all its strength values are 0
compute_strengths_algorithm=0
; 0 = standard formulas as follows:
;   armorStr = unitTable.armor * ( max_weapons - 1 ) + unitTable.PsyDef
;     max_weapons = 9
;   totalStr = unitTable.weapon.acc * unitTable.weapon.str (for all weapons the sum of the products of their accuracies and strengths) + armorStr * unitTable.agility
;   planetStr = unitTable.weapon.acc * unitTable.weapon.str (ground weapons only, but Ranged Space is included) + armorStr * unitTable.agility
;     Only ground movement types have a planetStr - Space, Jump, and Lander don't have a planetStr ( = 0 )
;   spaceStr = unitTable.weapon.acc * unitTable.weapon.str (space weapons only, but psy attack * strength is included) + armorStr * unitTable.agility
;     Only space movement types have a spaceStr: Space, Jump, Lander, Mech, and Gate
;   garrisonStr = planetStr / unitTable.movepoints (if movepoints is 0 then planetStr * 10)
;     Only ground movement types have a garrisonStr - Space, Jump, and Lander don't have a garrisontStr ( = 0 )
; 1 = Hyperion formulas as follows:
;   statStr = unitTable.movepoints^2 + ... + unitTable.PsyDef^2 (all stats: movement points, spot, camo, agility, armor, and psydef the sum of their sqaures)
;   totalStr = unitTable.weapon.acc * unitTable.weapon.str (all weapons the sum of the products of their accuracies timmes strengths) + statStr
;   planetStr = unitTable.weapon.acc * unitTable.weapon.str (ground weapons only, but Ranged Space is included) + statStr
;     Only ground movement types have a planetStr - Space, Jump, and Lander don't have a planetStr ( = 0 )
;   spaceStr = unitTable.weapon.acc * unitTable.weapon.str (space weapons only, but psy attack * strength is included) + statStr
;     Only space movement types have a spaceStr: Space, Jump, Lander, Mech, and Gate
;   garrisonStr = planetStr / squareroot( unitTable.movepoints ) (if movepoints is 0 then planetStr * 1.25)
;     Only ground movement types have a garrisonStr - Space, Jump, and Lander don't have a garrisontStr ( = 0 )
; 2 = Alternate formulas
;   armorStr = ( unitTable.armor * 3 + unitTable.PsyDef ) * squareroot( unitTable.agility )
;   totalStr = squareroot( unitTable.weapon.acc ) * unitTable.weapon.str (all weapons the sum of the products of the square root of accuracies times strengths) + armorStr
;   planetStr = squareroot( unitTable.weapon.acc ) * unitTable.weapon.str (ground weapons only, but Ranged Space is included) + armorStr
;     Only ground movement types have a planetStr - Space, Jump, and Lander don't have a planetStr ( = 0 )
;   spaceStr = squareroot( unitTable.weapon.acc ) * unitTable.weapon.str (space weapons only, but psy attack * strength is included) + armorStr
;     Only space movement types have a spaceStr: Space, Jump, Lander, Mech, and Gate
;   garrisonStr = planetStr / unitTable.movepoints (if movepoints is 0 then planetStr * 10)
;     Only ground movement types have a garrisonStr - Space, Jump, and Lander don't have a garrisontStr ( = 0 )
;   ai_build_algorithm affects how the AI builds units - it should be noted that the build categories are sorted by weight

ai_build_algorithm=0
; 0 = standard formulas as follows:
;   techWeight = techCost / 20 (for all unit required techs)
;   buildCategory.Weight = unitTable.totalStr + unitTable.garrisonStr + techWeight
;   buildCategory.totalStr = unitTable.totalStr
;   buildCategory.planetStr = unitTable.planetStr
;   buildCategory.spaceStr = unitTable.spaceStr
;   buildCategory.garrisonStr = unitTable.garrisonStr
; 1 = Hyperion algorithm (assumes that units are designed with technology weights built into their strengths)
;   techWeight = techCost / 10 (for all unit required techs)
;   buildCategory.Weight is calculated based on build category:
;      building land units: buildCategory.Weight = planetStr
;      building space units: buildCategory.Weight = spaceStr
;      building both categories: buildCategory.Weight = totalStr
;   buildCategory.totalStr = unitTable.totalStr
;   buildCategory.planetStr = unitTable.planetStr
;   buildCategory.spaceStr = unitTable.spaceStr
;   buildCategory.garrisonStr = unitTable.garrisonStr
; 2 = Alternate algorithm
;   techWeight = techCost / 10 (for all unit required techs)
;   buildCategory.Weight = unitTable.totalStr + unitTable.garrisonStr + techWeight
;   buildCategory.totalStr = unitTable.totalStr + techWeight (but only if totalStr > 0)
;   buildCategory.planetStr = unitTable.planetStr + techWeight (but only if planetStr > 0)
;   buildCategory.spaceStr = unitTable.spaceStr + techWeight (but only if spaceStr > 0)
;   buildCategory.garrisonStr = unitTable.garrisonStr

[debug]
theurgy=0                                ; only used if #ifndef NDEBUG is true, used to assign / unassign whether the player has the Theurgy technology
prompt_end_turn=1                        ; only used if #ifndef NDEBUG is true, otherwise is always 1. Used to skip the Next Turn message.
city_names=1                             ; only used if #ifndef NDEBUG is true, otherwise is always 1. Used to disable names on the star map.
choose_portrait=1                        ; only used if #ifndef NDEBUG is true, otherwise is always 1. Can be used to skip portait selection.
choose_traits=1                          ; only used if #ifndef NDEBUG is true, otherwise is always 1. Can be used to skip trait selection
animation_length_percentage=100          ; multiplier for animation length, set to 0 for very quick AI turns
auto_save_to_gal_file_at_end_of_turn=0   ; set this to 1 to automatically save your game to a GAL file at the end of the turn